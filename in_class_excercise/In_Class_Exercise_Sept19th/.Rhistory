library(ggplots)
library(ggplot2)
install.packages("tidycensus")
install.packages("tidycensus")
install.packages("pacman")
library(pacman)
library(pacman)
p_load(tidyverse, sf)
library(tidyverse)
library(tidycensus)
census_api_key("7ef485ab67cffa9e33a4d14f97aae395bb5c011c")
install=TRUE
census_api_key("7ef485ab67cffa9e33a4d14f97aae395bb5c011c", install = TRUE)
acs_var <- load_variables(year= 2022, dataset = "acs5")
View(acs_var)
View(acs_var)
help(get_acs)
philiy_total_pop <- get_acs(
geography = "tract",
variables = "B01003_001",
state = "PA",
county = "Philadelphia",
output = "wide",
geometry = TRUE
)
View(philiy_total_pop)
plot(philiy_total_pop[3])
st_write(philiy_total_pop,
dsn="philiy_total_pop.gpkg")
rm(list=ls()) ##Clear my objects from memory
##we're going to put the cost of travel at 0 to 300 cents per VMT
price<-0:300
##VMT supplied (think willingness to provide all inputs: roads, gas, cars, etc.)
qs<-price*2/30
##let's plot price against VMT supply
plot(qs, price)
##Demand also depends on price
qd<- 20 - price * 1.8/30
##let's compare our plots
lines(qd, price)
p_eq <- 600/3.8
print(p_eq)
##now plug this into either equation to get
q_eq <- 20 - p_eq * 1.8/30
print(q_eq)
sc <- (price-22)*2/30
lines(sc, price)
cbind(price,qd,qs,sc)
dat <-as.data.frame(cbind(price,qd,qs,sc))
rm(price,qd,qs,sc)
#look at data
head(dat)
summary(dat)
str(dat)
##econometrics in a nutshell
df <- lm(qd ~ price, dat)
summary(df)
sf <- lm(qs ~ price, dat)
summary(sf)
-.067 * mean(dat$price)/mean(dat$qd)
plot(dat$qs, dat$price, t="line")
lines(dat$qd, dat$price)
lines(dat$sc, dat$price)
plot(dat$qs, dat$price, t="line", col=2, xlab="Average daily VMT per capita",
ylab = "Price per VMT in cents",
main = "Price, social cost, and VMT")
lines(dat$qd, dat$price, col=4)
lines(dat$sc, dat$price, lty=2, col=2)
library(ggplot2)
graph <- ggplot(dat, aes(y=price)) +
geom_line(aes(x = qd, colour = "Demand")) +
geom_line(aes(x = qs, colour = "Supply")) +
geom_line(aes(x = sc, colour = "Social Cost"))
graph
graph + theme(legend.title=element_blank())
library(tidyverse)
library(tidycensus)
library(sf)
library(dplyr)
acs_2019 <- load_variables(2019, "acs5")
acs_2019
acsVariables <- c(totpop = "B01001_001",
asian = "B03002_006", #Asian Non Hispanic alone,
black = "B03002_004", #Black non-Hispanic alone
hisp_latx = "B03003_003", #Hispanic/Latine
white = "B03002_003", #White Non-Hispanic
amerind_natalask = "B03002_005", #American Indian/Alaskan Native
other = "B03002_008", #other race
tworace = "B03002_009", #two or more reaces
occ = "B25003_001", #occ
upied housing units
acsVariables <- c(totpop = "B01001_001",
asian = "B03002_006", #Asian Non Hispanic alone,
black = "B03002_004", #Black non-Hispanic alone
hisp_latx = "B03003_003", #Hispanic/Latine
white = "B03002_003", #White Non-Hispanic
amerind_natalask = "B03002_005", #American Indian/Alaskan Native
other = "B03002_008", #other race
tworace = "B03002_009", #two or more reaces
occ = "B25003_001",
own = "B25003_002", #occupied owned housing units
rent = "B25003_003", #occupied rented housing units
totCommute ="B08006_001", #total number of commuters
pubTrans ="B08006_008", #public transportation riders
bikers ="B08006_014", #cyclists
medInc = "B19013_001") #median income
acs_2019 <- get_acs(geography= "tract",
variables= acsVariables,
state= "NC",county = "Mecklenburg", survey ="acs5",
year = 2019, output = "wide", geometry = TRUE)
mc_2019 <- mc_2019 %>%
mutate(transit_prop = pubTransE/totpopE, renter_prop = rentE/occE)
mc_2019 <- acs_2019 %>%
mutate(transit_prop = pubTransE/totpopE, renter_prop = rentE/occE)
st_write(obj = mc_2019, dsn = "mc_2019.gpkg", delete_dsn = TRUE)
library(nycflights13)
installed.packages("nycflights13")
library(nycflights13)
trips<- nycflights13::flights
installed.packages("nycflights13")
library(nycflights13)
library(dplyr)
trips<- nycflights13::flights
installed.packages("nycflights13", repo: "https://cran.rstudio.com")
installed.packages("nycflights13", repos: "https://cran.rstudio.com")
installed.packages("nycflights13")
trips<- nycflights13::flights
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
trips<- nycflights13::flights
class(trip)
class(trips)
trips
first3_1 <- trips %>%
select(year, month, day)
first3_1 <- trips %>%
select(year, month, day)
first3_1 <- trips % > % select(year, month, day)
first3_1 <- trips %>%
select(year, month, day)
library(nycflights13)
library(dplyr)
first3_1 <- trips %>%
select(year, month, day)
first3_2 <- trips %>%
select(1:3)
identical(first3_1, first3_2)
firs
first <- select(trips, year, month, day)
identical(first3_1, first3_2, first)
identical(first3_1, first3_2)
identical(first3_1, first)
arr_delay > 0 ~ "late")
trips <- trips %>%
mutate(new_arrival_del=arr_time-sched_arr_time,
late_cat = case_when(
new_arrival_del < 0 ~ "early",
new_arrival_del == 0 ~ "on time",
new_arrival_del > 0 ~ "late"
))
View(trips)
trips <- trips %>%
mutate(new_arrival_del=arr_time-sched_arr_time,
late_cat = case_when(
new_arrival_del < 0 ~ "early",
new_arrival_del == 0 ~ "on time",
new_arrival_del > 0 ~ "late"
)) %>%
filter(arr_delay==30 & arr_delay<=60)
late_cat_figs <- trips %>%
group_by(late_cat) %>%
summarise(n=n(),
avg_delay_hour= mean(arr_delay, na.rm=TRUE)/60)
View(late_cat_figs)
install.packages("leaflet")
install.packages("leaflet.providers")
(257672+101473*2+22274*3)/(381419+238362)
setwd("C:/Users/zyang/OneDrive/文档/In_Class_Exercise_Sept19th")
state_Data_join <- st_read("State_Data_Join.dbf", quiet = TRUE)
library(pacman)
p_load(sf, tidyverse)
library(sf)
state_Data_join <- st_read("State_Data_Join.dbf", quiet = TRUE)
MSA_Data_join <- st_read("MSA_Data_Join.dbf", quiet = TRUE)
head(state_Data_join)
View(MSA_Data_join)
state_join_sf <- state_Data_join %>%
st_as_sf(coords = c("Longitude_", "Latitude__"), crs = 4326)
state_st_sf <- state_join_sf %>%
st_join(states, join = st_within)
states <- st_read("states.shp", quiet = TRUE)
state_st_sf <- state_join_sf %>%
st_join(states, join = st_within)
state_join_sf <- state_Data_join %>%
st_as_sf(coords = c("Longitude_", "Latitude__"), crs = 4326)
state_st_sf <- state_join_sf %>%
st_join(states, join = st_within)
states <- st_transform(states, crs = st_crs(state_join_sf))
state_st_sf <- state_join_sf %>%
st_join(states, join = st_within)
View(state_st_sf)
View(states)
View(state_join_sf)
View(state_join_sf)
View(state_join_sf)
View(state_Data_join)
View(state_Data_join)
MSA_Data_join <- st_read("MSA_Data_Join.dbf", quiet = TRUE)
View(MSA_Data_join)
MSA_join_sf <- MSA_Data_join %>%
st_as_sf(coords = c("Long", "Lat"), crs = 4326)
View(MSA_Data_join)
MSA_join_sf <- MSA_join_sf %>%
st_join(msa, join = st_within)
msa <- st_read("SelectMSA.shp", quiet = TRUE)
MSA_join_sf <- MSA_join_sf %>%
st_join(msa, join = st_within)
msa <- st_transform(msa, crs = st_crs(MSA_join_sf))
MSA_join_sf <- MSA_join_sf %>%
st_join(msa, join = st_within)
View(MSA_join_sf)
